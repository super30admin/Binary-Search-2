// Time Complexity :O(log(n))
// Space Complexity :O(1)
// Did this code successfully run on Leetcode : Yes
// Any problem you faced while coding this : No


// Your code here along with comments explaining your approach

public class Solution {
    public int search(ArrayReader reader ,int target) {
        if(reader.get(0) == Integer.MAX_VALUE) return -1;
        
        int low = 0;
        int high = 1;
        
        while(target > reader.get(high))
        {
            low = high;
            high = high * 2;
            
        }
        
        return binarySearch(reader,target,low,high);
    }
    private int binarySearch(ArrayReader reader ,int target,int low,int high)
    {
        while(low <= high)
        {
            int mid = low + (high - low)/2 ;
            if(reader.get(mid) == target)
            {
                return mid;
            }
            else if(reader.get(mid) > target)
            {
                high = mid - 1;
            }
            else
            {
                low = mid + 1;
            }
        }
        return -1;
    }
}