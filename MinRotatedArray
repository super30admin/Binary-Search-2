# Time Complexity : O(log(N))
# Space Complexity : O(1)
# Did this code successfully run on Leetcode : Yes
# Any problem you faced while coding this : No
class Solution:
    def findMin(self, nums: List[int]) -> int:        
        left = 0
        right = len(nums) - 1
        if nums[left] <= nums[right]:
            return nums[left]
         
        while left <= right:
            mid = int((left + right)/2)
            
            if (mid == 0 or nums[mid-1] > nums[mid]) \
                and (mid == len(nums) - 1 or nums[mid+1] > nums[mid]):
                return nums[mid]
            
            if nums[mid] > nums[len(nums) - 1]:
                left = mid + 1
            elif nums[0] > nums[mid]:
                right = mid - 1
