class Solution {
    private int findFirst (int[] nums, int target) {
        int an = -1, lo = 0, hi = nums.length - 1;
        while (lo <= hi) {
            int mid = lo + (hi - lo) / 2;
            if (nums[mid] < target) {
                lo = mid + 1;
            }
            else if (nums[mid] > target) {
                hi = mid - 1;
            }
            else {
                an = mid;
                hi = mid - 1;
            }
        }
        return an;
    } 
    
    private int findLast(int[] nums, int target) {
        int an = -1, lo = 0, hi = nums.length - 1;
        while (lo <= hi) {
            int mid = lo + (hi - lo) / 2;
            if (nums[mid] < target) {
                lo = mid + 1;
            }
            else if (nums[mid] > target) {
                hi = mid - 1;
            }
            else {
                an = mid;
                lo = lo + 1;
            }
        }
        return an;
    }
    public int[] searchRange(int[] nums, int target) {
        int lo = findFirst(nums, target);
        int hi = findLast (nums, target);
        return new int[] {lo, hi};
    }
}
