# time complexity o(log(n))
# space complexity o(1)

class Solution:
    def findMin(self, nums: List[int]) -> int:
        low = 0
        high = len(nums) - 1
        if(nums[low] <= nums[high]):
            return nums[low]
        while(low <= high):
            mid = low + (high - low)//2
            if(nums[low] < nums[mid]):
                low = mid 
            elif(nums[low] == nums[mid]):
                low = mid + 1
            elif(nums[high] > nums[mid]):
                high = mid
            elif(nums[high] == nums[mid]):
                high = mid + 1
                
        return nums[mid]
        