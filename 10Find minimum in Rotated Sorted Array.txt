//153. Find Minimum in Rotated Sorted Array

// Time Complexity :O(log n)
// Space Complexity :O(1)
// Did this code successfully run on Leetcode :yes
// Any problem you faced while coding this :no


// Your code here along with comments explaining your approach in three sentences only

class Solution {

    public int findMin(int[] nums) {
       
       int low=0,high=nums.length-1;

       while(low<=high){

           int mid=low+(high-low)/2;
        
        if(nums[low] <=nums[high]){
            //whole array sorted
            return nums[low];
        }
        else if((mid==0 ||nums[mid]<nums[mid-1]) && (mid<nums.length-1 && nums[mid]<nums[mid+1])){
               //mid
               return nums[mid];
           }else if(nums[low]<=nums[mid]){
               //left side sorted
                low=mid+1;

           }else{
               high=mid-1;
           }

       }
       return 0;
        
    }
}