// Time Complexity :O(log n)
// Space Complexity : constant
// Did this code successfully run on Leetcode : yes
// Any problem you faced while coding this :
edge cases

// Your code here along with comments explaining your approach
class Solution {
    public int findPeakElement(int[] nums) {
        int low =0;
        int high = nums.length -1;
        
        if(nums == null || nums.length ==0)
            return -1;
        if(nums.length == 1)
            return 0;
        
        while(low <= high)
        {
            int mid = low + (high-low)/2;
            if((mid == 0 || nums[mid]>nums[mid-1]) && (mid == nums.length -1 || nums[mid]>nums[mid+1]))
                return mid;
            else
            {
                //move towards greater
                if(nums[mid]<nums[mid+1])
                    low = mid+1;
                else
                    high = mid-1;
            }
        }
        return -1;
    }
    
}

 
