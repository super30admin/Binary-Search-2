// Time complexity: O(logn)
// Space complexity: O(1)
// Did this code successfully run on leetcode: Yes

class Solution {
    public int findPeakElement(int[] nums) {
        if(nums == null || nums.length == 0) return -1;
        int left = 0;

        int right = nums.length - 1;

        while(left < right){
            int mid = left + (right-left)/2;

            //left element is smaller than the mid, so the peak would lie at the right side
            if(nums[mid] < nums[mid+1]){
                left = mid+1;
            }


            else{
                right = mid;
            }

        }

        return left;
    }
}
