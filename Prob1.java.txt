class Solution {
    public int[] searchRange(int[] nums, int target) {
        int[] result = {-1,-1};
        
        if(nums == null || nums.length == 0)
            return result;
        
        
        
        result[0] = applyBinarySearch(nums,target,0,true);
        
        if(result[0] != -1)
            result[1] = applyBinarySearch(nums,target,result[0],false);
        
        return result;
        
        
        }
        
    
    
    private int applyBinarySearch(int[] nums,int target,int start,boolean findMin){
        
        int low = start;
        int high = nums.length-1;
        
        while(low <= high){
            int mid = low+(high-low)/2;
            
            if(nums[mid] == target){
            if(findMin){
                if(mid == 0 || nums[mid] != nums[mid-1])
                    return mid;
                else
                    high = mid-1;
            }else{
                if(mid == nums.length-1 || nums[mid] != nums[mid+1] )
                    return mid;
                else
                    low = mid+1;
            }
            }
            else if(nums[mid] < target)
                low = mid+1;
            else
                high = mid -1;
    }
        return -1;
}
}