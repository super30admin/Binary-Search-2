// O(logn) time complexity
// O(1) space complexity
// ran on leetcode




class Solution {
    public int[] searchRange(int[] nums, int target) {
        int []answer = {-1,-1};
        int left = 0;
        int right= nums.length-1;
        int mid = 0;
        
        while (left<=right){
          mid= left+(right-left)/2;
            if (nums[mid]==target){
                answer[0]=mid;
                right=mid-1;
            }
            else if (nums[mid]<target){
                left= mid+1;
            }
            else{right=mid-1;}
        }
        mid=0;
        left=0;
        right=nums.length-1;
 while (left<=right){
            mid=left+(right-left)/2;
            if (nums[mid]==target){
                answer[1]=mid;
                left=mid+1;
            }
            else if (nums[mid]<target){
                left= mid+1;
            }
            else{right=mid-1;}
        }
return answer;

    }
}
