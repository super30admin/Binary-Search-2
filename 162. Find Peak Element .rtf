{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red15\green112\blue1;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c0\c50196\c0;\cssrgb\c100000\c100000\c100000;}
\margl1440\margr1440\vieww28600\viewh15300\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
class Solution:\
    def findPeakElement(self, nums: List[int]) -> int:\
        l, r = 0, len(nums) - 1\
        \
        \
        while l <= r:\
            mid = (l + r) // 2\
            if ((mid == 0 or (nums[mid-1] < nums[mid])) and\
                (mid == len(nums) - 1  or (nums[mid] > nums[mid + 1]))):\
                return mid\
            elif nums[mid + 1] > nums[mid]:\
                l = mid + 1\
            else:\
                r = mid - 1\
        \
    \
        \
    \
            \
        }