// Time Complexity : O(log n) 
// Space Complexity : O(1) - No extra space is used
// Did this code successfully run on Leetcode : Yes
// Any problem you faced while coding this :


// Your code here along with comments explaining your approach

class Solution {
    public int findPeakElement(int[] nums) {
        int left = 0;
        int right = nums.length -1;
        
        while(left <= right){
            int mid = left +(right - left)/2;
            
            if((mid == 0 || nums[mid] > nums[mid-1]) && (mid == nums.length -1 || nums[mid] > nums[mid+1] )){
                return mid;
            }else if(nums[mid] < nums[mid + 1]){
                left = mid +1;
            }else{
                right = mid -1;
            }
        }
        
        return -1;
    }
}