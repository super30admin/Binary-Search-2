sample text file


//Time complexity O(log n)
//Space complexity O(1)

class Solution {
    public int findPeakElement(int[] nums) {
        int n = nums.length;
        int low = 0,high = n-1,mid = 0;
        
        if(nums.length == 1)return 0;
        if(nums[high] > nums[high-1])return high;
        if(nums[low] > nums[low + 1])return low;
        
        while(low < high){
            mid = (low + high)/2;
            if(nums[mid] > nums[mid-1] && nums[mid] > nums[mid + 1])return mid;
            else if(nums[mid] > nums[mid-1])low = mid;
            else high = mid;
        }
        
        return -1;
    }
}




//Time complexity O(log n)
//Space complexity O(1)

class Solution {
    public int findMin(int[] nums) {
        int low=0;
        int high=nums.length-1;
        while(low < high)
       {
            int mid = low + (high - low) / 2;
            if (nums[mid] ==nums[high])
                high--;

            else if(nums[mid] > nums[high])
                low = mid + 1;
            else
                high = mid;
         }
        return nums[high];
    }
}


