//Time Complexity :O(logn)
// Space Complexity :O(1)
// Did this code successfully run on Leetcode :Yes
// Any problem you faced while coding this : yes saw discussion
class Solution {
    public int[] searchRange(int[] nums, int target) {
        int[] result = new int[2];
        int low = 0;
        int high = nums.length - 1;
        int firstIndex = -1;
        while(low<=high) {
            int mid = low+(high-low)/2;
            if(nums[mid] == target) firstIndex = mid;
            if(target <= nums[mid]) high = mid - 1;
            else low = mid+1;
        }
        low = 0;
        high = nums.length -1;
        int secondIndex = -1;
        while(low<=high) {
            int mid = low+(high-low)/2;
            if(nums[mid] == target) secondIndex = mid;
            if(target >= nums[mid]) low = mid + 1;
            else high = mid-1;
        }
        result[0] = firstIndex;
        result[1] = secondIndex;
        return result;
    }


}
