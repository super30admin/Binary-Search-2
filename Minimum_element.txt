// Time Complexity : O(log N)
// Space Complexity : O{1)
// Did this code successfully run on Leetcode : Yes
// Any problem you faced while coding this : No

//To find the range to perform the binary search , we first check if the mid element is greater than the last element. 
//If it is ,then we search on the right side by assigning left=mid+1
//If not, then  we search on the left side by assigning right=mid


 
     def findMin(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        left,right = 0,len(nums)-1
        while left < right :
            mid = (left + right) >> 1
            if nums[mid] > nums[-1]:
                left = mid + 1
            else:
                right = mid
        return nums[left]